# 왕실의 나이트

# 개요
# 행복 왕국의 왕실 정원은 채스판과 같은 8X8 좌표 평면이다.
# 왕실 정원의 특정한 한 칸에 나이트가 서있다. 나이트는 매우 충성스러운 신하로서 매일 무슬을 연마한다.
# 나이트는 말을 타고 있기 때문에 이동을 할 때는 L자형태로만 이동할 수 있으며 정원 밖으로 나갈 수 없다.
# 나이트는 특정한 위치에서 다음과 같은 2가지 경우로 이동할 수 있다.


# 조건
# 1. 수평으로 두칸이동한 뒤에 수직으로 한칸 이동하기
# 2. 수직으로 두칸 이동한 뒤에 수평으로 한칸 이동하기
# 8x8 좌표 평면은 1~8 a~h로 표현한다.

# 예를들어 만약 나이트가 a1에 있을 때 이동할 수 있는 경우의 수는 다음 2가지이다.
# a1의 위치는 좌표 평면에서 구석의 위치에 해당하며 나이트는 정원 밖으로는 나갈갈 수 없기 때문.
# 1. 오른쪽으로 두 칸 이동 후 아래로 한 칸 이동하기 (c2)
# 2. 아래로 두 칸 이동 후 오른쪽으로 한 칸 이동하기 (b3)

# 또 다른 예로 나이트가 c2에 위치해 있으면 나이트가 이동할 수 있는 경우의 수는 6가지이다. 이건 직접 게산하시오.

# 입력조건
# 첫째 줄에 8X8 좌표 평면상에서 현재 나이트가 위치한 곳의 좌표를 나타내는 두 문자로 구성된 문자열이 입력된다.
# a1 처럼 열과 행으로 이뤄진다.

# 출력조건
# 첫째 줄에 나이트가 이동할 수 있는 경우의 수를 출력하시오.

# 입력예시
# a1

# 출력예시
# 2

# 나의 풀이 ! 
a = list(map(str, input()))
print(a)
x = ord(a[0])-96
y = int(a[1])

testCase = (2, 1), (2, -1), (-2, 1), (-2, -
                                      1), (1, 2), (-1, 2), (-1, 2), (-1, -2)
count = 0
for i in range(len(testCase)):
    finalx = x - testCase[i][0]
    finaly = y - testCase[i][1]
    if finalx >= 1 and finaly >= 1:
        if finalx <= 8 and finaly <= 8:
            count += 1

print(count)


# 모법답안

# 현재 나이트에 입력 받기
input_data = input()
row = int(input_data[1])
column = (int(ord(input_data[0]))- int(ord('a'))+1 )
# 나이트가 움직일 수 잇는 8가지 방향 정의 
steps = [(2, 1), (2, -1), (-2, 1), (-2, -
                                      1), (1, 2), (-1, 2), (-1, 2), (-1, -2)]
                
# 8가지 방향에 대하여 각 위치ㅗ 이동이 가증한지 확인
result = 0
for step in steps : 
    # 이동하고자 하는 위치 확인
    next_row = row + step[0]
    next_column = column + step[1]
    # 해당 위치로 이동이 가능하다면  카운트 증가
    if next_row >=1 and next_row<=8 and next_column >= 1 and next_column <= 8 :
        result += 1 

print(result)